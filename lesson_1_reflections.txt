How did viewing a diff between two versions of a file help you see the bug that was introduced?
Answer:
It automatically lists the differences between two files.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Answer:
We can easily find out where the bugs originated and also keep track of the changes made by different developers working on the same program.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Answer:
More control over changes made to the code. Much more cohesive for other developers to follow.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because usually code files are related to each other and depend on each other for shared functionality. Saving all the files in a commit is necessary to keep track of the changes in them.

How can you use the commands git log and git diff to view the history of files?
git log can be used to list all the commits done on a repository. git diff can be used to find the differences in code between two commits.

How might using version control make you more confident to make changes that could break something?
We get more confident at making changer because we can revert back to the working code easily.

Now that you have your workspace set up, what do you want to try using Git for?
I want to use git for all my upcoming projects so that I can keep track of all the changes.
